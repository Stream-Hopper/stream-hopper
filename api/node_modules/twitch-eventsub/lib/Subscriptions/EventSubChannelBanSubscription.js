"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelBanSubscription = void 0;
var tslib_1 = require("tslib");
var twitch_common_1 = require("twitch-common");
var EventSubChannelBanEvent_1 = require("../Events/EventSubChannelBanEvent");
var EventSubSubscription_1 = require("./EventSubSubscription");
/**
 * @private
 */
var EventSubChannelBanSubscription = /** @class */ (function (_super) {
    tslib_1.__extends(EventSubChannelBanSubscription, _super);
    function EventSubChannelBanSubscription(handler, client, _userId) {
        var _this = _super.call(this, handler, client) || this;
        _this._userId = _userId;
        return _this;
    }
    Object.defineProperty(EventSubChannelBanSubscription.prototype, "id", {
        get: function () {
            return "channel.ban." + this._userId;
        },
        enumerable: false,
        configurable: true
    });
    EventSubChannelBanSubscription.prototype.transformData = function (data) {
        return new EventSubChannelBanEvent_1.EventSubChannelBanEvent(data, this._client._apiClient);
    };
    EventSubChannelBanSubscription.prototype._subscribe = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _b = (_a = this._client._apiClient.helix.eventSub).subscribeToChannelBanEvents;
                        _c = [this._userId];
                        return [4 /*yield*/, this._getTransportOptions()];
                    case 1: return [2 /*return*/, _b.apply(_a, _c.concat([_d.sent()]))];
                }
            });
        });
    };
    EventSubChannelBanSubscription = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubSubscription')
    ], EventSubChannelBanSubscription);
    return EventSubChannelBanSubscription;
}(EventSubSubscription_1.EventSubSubscription));
exports.EventSubChannelBanSubscription = EventSubChannelBanSubscription;
