"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReverseProxyAdapter = void 0;
var tslib_1 = require("tslib");
var twitch_common_1 = require("twitch-common");
var ConnectionAdapter_1 = require("./ConnectionAdapter");
/**
 * A WebHook connection adapter that supports a reverse proxy in front of the listener.
 *
 * @hideProtected
 */
var ReverseProxyAdapter = /** @class */ (function (_super) {
    tslib_1.__extends(ReverseProxyAdapter, _super);
    /**
     * Creates a reverse proxy connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    function ReverseProxyAdapter(options) {
        var _a, _b;
        var _this = _super.call(this) || this;
        _this._hostName = options.hostName;
        _this._port = (_a = options.port) !== null && _a !== void 0 ? _a : 8080;
        _this._externalPort = (_b = options.externalPort) !== null && _b !== void 0 ? _b : 443;
        _this._pathPrefix = options.pathPrefix;
        return _this;
    }
    /** @protected */
    ReverseProxyAdapter.prototype.getListenerPort = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._port];
            });
        });
    };
    /** @protected */
    ReverseProxyAdapter.prototype.getExternalPort = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._externalPort];
            });
        });
    };
    /** @protected */
    ReverseProxyAdapter.prototype.getHostName = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._hostName];
            });
        });
    };
    Object.defineProperty(ReverseProxyAdapter.prototype, "pathPrefix", {
        /** @protected */
        get: function () {
            return this._pathPrefix;
        },
        enumerable: false,
        configurable: true
    });
    ReverseProxyAdapter = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'ReverseProxyAdapter')
    ], ReverseProxyAdapter);
    return ReverseProxyAdapter;
}(ConnectionAdapter_1.ConnectionAdapter));
exports.ReverseProxyAdapter = ReverseProxyAdapter;
