"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectConnectionAdapter = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var https = require("https");
var twitch_common_1 = require("twitch-common");
var ConnectionAdapter_1 = require("./ConnectionAdapter");
/**
 * A WebHook connection adapter that enables a direct connection.
 *
 * Requires the server to be directly available to the internet.
 *
 * @hideProtected
 */
var DirectConnectionAdapter = /** @class */ (function (_super) {
    tslib_1.__extends(DirectConnectionAdapter, _super);
    /**
     * Creates a new simple WebHook adapter.
     *
     * @expandParams
     *
     * @param options
     */
    function DirectConnectionAdapter(options) {
        var _this = _super.call(this) || this;
        _this._hostName = options.hostName;
        _this._ssl = options.sslCert;
        return _this;
    }
    /** @protected */
    DirectConnectionAdapter.prototype.createHttpServer = function () {
        return https.createServer({
            key: this._ssl.key,
            cert: this._ssl.cert
        });
    };
    Object.defineProperty(DirectConnectionAdapter.prototype, "listenUsingSsl", {
        /** @protected */
        // eslint-disable-next-line @typescript-eslint/class-literal-property-style
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    /** @protected */
    DirectConnectionAdapter.prototype.getHostName = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._hostName];
            });
        });
    };
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], DirectConnectionAdapter.prototype, "_ssl", void 0);
    DirectConnectionAdapter = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'DirectConnectionAdapter')
    ], DirectConnectionAdapter);
    return DirectConnectionAdapter;
}(ConnectionAdapter_1.ConnectionAdapter));
exports.DirectConnectionAdapter = DirectConnectionAdapter;
