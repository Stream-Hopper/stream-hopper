import { ConnectionAdapter } from './ConnectionAdapter';
/**
 * The configuration of the middleware connection adapter.
 */
export interface MiddlewareAdapterConfig {
    /**
     * The host name the root application is available under.
     */
    hostName: string;
    /**
     * The port on which the root application is available.
     *
     * @default 443
     */
    port?: number;
    /**
     * The path your listener is mounted under.
     */
    pathPrefix?: string;
}
/**
 * A WebHook connection adapter that is designed to work as a middleware for a
 * connect compatible application rather than the built-in server.
 *
 * @hideProtected
 */
export declare class MiddlewareAdapter extends ConnectionAdapter {
    private readonly _hostName;
    private readonly _port;
    private readonly _pathPrefix?;
    /**
     * Creates a middleware connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    constructor(options: MiddlewareAdapterConfig);
    /** @protected */
    getExternalPort(): Promise<number>;
    /** @protected */
    getHostName(): Promise<string>;
    /** @protected */
    get pathPrefix(): string | undefined;
}
