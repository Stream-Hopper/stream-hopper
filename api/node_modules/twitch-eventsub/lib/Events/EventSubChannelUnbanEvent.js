"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelUnbanEvent = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An EventSub event representing a user being unbanned in a channel.
 */
var EventSubChannelUnbanEvent = /** @class */ (function () {
    /** @private */
    function EventSubChannelUnbanEvent(_data, client) {
        this._data = _data;
        this._client = client;
    }
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "userId", {
        /**
         * The ID of the unbanned user.
         */
        get: function () {
            return this._data.user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "userName", {
        /**
         * The name of the unbanned user.
         */
        get: function () {
            return this._data.user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "userDisplayName", {
        /**
         * The display name of the unbanned user.
         */
        get: function () {
            return this._data.user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the unbanned user.
     */
    EventSubChannelUnbanEvent.prototype.getUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "broadcasterId", {
        /**
         * The ID of the broadcaster from whose chat the user was unbanned.
         */
        get: function () {
            return this._data.broadcaster_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "broadcasterName", {
        /**
         * The name of the broadcaster from whose chat the user was unbanned.
         */
        get: function () {
            return this._data.broadcaster_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "broadcasterDisplayName", {
        /**
         * The display name of the broadcaster from whose chat the user was unbanned.
         */
        get: function () {
            return this._data.broadcaster_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the broadcaster.
     */
    EventSubChannelUnbanEvent.prototype.getBroadcaster = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "moderatorId", {
        /**
         * The ID of the moderator who issued the unban.
         */
        get: function () {
            return this._data.moderator_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "moderatorName", {
        /**
         * The name of the moderator who issued the unban.
         */
        get: function () {
            return this._data.moderator_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelUnbanEvent.prototype, "moderatorDisplayName", {
        /**
         * The display name of the moderator who issued the unban.
         */
        get: function () {
            return this._data.moderator_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the moderator.
     */
    EventSubChannelUnbanEvent.prototype.getModerator = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.moderator_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubChannelUnbanEvent.prototype, "_client", void 0);
    EventSubChannelUnbanEvent = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubChannelUnbanEvent', 'userId')
    ], EventSubChannelUnbanEvent);
    return EventSubChannelUnbanEvent;
}());
exports.EventSubChannelUnbanEvent = EventSubChannelUnbanEvent;
