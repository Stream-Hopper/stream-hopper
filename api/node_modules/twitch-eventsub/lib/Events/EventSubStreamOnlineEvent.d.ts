import type { ApiClient, HelixUser } from 'twitch';
declare type EventSubStreamOnlineEventStreamType = 'live' | 'playlist' | 'watch_party' | 'premiere' | 'rerun';
/** @private */
export interface EventSubStreamOnlineEventData {
    id: string;
    broadcaster_user_id: string;
    broadcaster_user_login: string;
    broadcaster_user_name: string;
    type: EventSubStreamOnlineEventStreamType;
    started_at: string;
}
/**
 * An EventSub event representing a stream going live.
 */
export declare class EventSubStreamOnlineEvent {
    private readonly _data;
    private readonly _client;
    /** @private */
    constructor(data: EventSubStreamOnlineEventData, client: ApiClient);
    /**
     * The ID of the broadcaster.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster.
     */
    get broadcasterDisplayName(): string;
    /**
     * Retrieves more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The type of the stream going live.
     */
    get streamType(): EventSubStreamOnlineEventStreamType;
    /**
     * The date and time when the stream was started.
     */
    get startDate(): Date;
}
export {};
