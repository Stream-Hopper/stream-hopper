"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubUserUpdateEvent = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An EventSub event representing updating their account details.
 */
var EventSubUserUpdateEvent = /** @class */ (function () {
    /** @private */
    function EventSubUserUpdateEvent(_data, client) {
        this._data = _data;
        this._client = client;
    }
    Object.defineProperty(EventSubUserUpdateEvent.prototype, "userId", {
        /**
         * The ID of the user.
         */
        get: function () {
            return this._data.user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubUserUpdateEvent.prototype, "userName", {
        /**
         * The name of the user.
         */
        get: function () {
            return this._data.user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubUserUpdateEvent.prototype, "userDisplayName", {
        /**
         * The display name of the user.
         */
        get: function () {
            return this._data.user_name;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubUserUpdateEvent.prototype, "userDescription", {
        /**
         * The user's profile description.
         */
        get: function () {
            return this._data.description;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubUserUpdateEvent.prototype, "userEmail", {
        /**
         * The user's email address.
         *
         * This is `null` if you are not authorized to read the email address,
         * i.e. you have never successfully requested the scope `user:read:email` from the user.
         */
        get: function () {
            var _a;
            return (_a = this._data.email) !== null && _a !== void 0 ? _a : null;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the user.
     */
    EventSubUserUpdateEvent.prototype.getUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubUserUpdateEvent.prototype, "_client", void 0);
    EventSubUserUpdateEvent = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubUserUpdateEvent', 'userId')
    ], EventSubUserUpdateEvent);
    return EventSubUserUpdateEvent;
}());
exports.EventSubUserUpdateEvent = EventSubUserUpdateEvent;
