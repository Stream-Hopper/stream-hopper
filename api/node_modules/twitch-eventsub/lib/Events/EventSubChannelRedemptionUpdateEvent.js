"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelRedemptionUpdateEvent = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An EventSub event representing a Channel Points redemption being updated.
 */
var EventSubChannelRedemptionUpdateEvent = /** @class */ (function () {
    /** @private */
    function EventSubChannelRedemptionUpdateEvent(_data, client) {
        this._data = _data;
        this._client = client;
    }
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "id", {
        /**
         * The ID of the redemption being updated.
         */
        get: function () {
            return this._data.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "broadcasterId", {
        /**
         * The ID of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "broadcasterName", {
        /**
         * The name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "broadcasterDisplayName", {
        /**
         * The display name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the broadcaster.
     */
    EventSubChannelRedemptionUpdateEvent.prototype.getBroadcaster = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "userId", {
        /**
         * The ID of the user.
         */
        get: function () {
            return this._data.user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "userName", {
        /**
         * The name of the user.
         */
        get: function () {
            return this._data.user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "userDisplayName", {
        /**
         * The display name of the user.
         */
        get: function () {
            return this._data.user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the user.
     */
    EventSubChannelRedemptionUpdateEvent.prototype.getUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "input", {
        /**
         * The input text given by the user.
         *
         * If there is no input to be given, this is an empty string.
         */
        get: function () {
            return this._data.user_input;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "status", {
        /**
         * The status of the redemption.
         */
        get: function () {
            return this._data.status;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "rewardId", {
        /**
         * The ID of the reward that was redeemed.
         */
        get: function () {
            return this._data.reward.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "rewardTitle", {
        /**
         * The title of the reward that was redeemed.
         */
        get: function () {
            return this._data.reward.title;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "rewardCost", {
        /**
         * The cost of the reward that was redeemed.
         */
        get: function () {
            return this._data.reward.cost;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "rewardPrompt", {
        /**
         * The description of the reward that was redeemed.
         */
        get: function () {
            return this._data.reward.prompt;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelRedemptionUpdateEvent.prototype, "redemptionDate", {
        /**
         * The time when the user redeemed the reward.
         */
        get: function () {
            return new Date(this._data.redeemed_at);
        },
        enumerable: false,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubChannelRedemptionUpdateEvent.prototype, "_client", void 0);
    EventSubChannelRedemptionUpdateEvent = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubChannelRedemptionUpdateEvent', 'id')
    ], EventSubChannelRedemptionUpdateEvent);
    return EventSubChannelRedemptionUpdateEvent;
}());
exports.EventSubChannelRedemptionUpdateEvent = EventSubChannelRedemptionUpdateEvent;
