import type { ApiClient, HelixUser } from 'twitch';
/** @private */
export interface EventSubChannelFollowEventData {
    user_id: string;
    user_login: string;
    user_name: string;
    broadcaster_user_id: string;
    broadcaster_user_login: string;
    broadcaster_user_name: string;
    followed_at: string;
}
/**
 * An EventSub event representing a channel being followed.
 */
export declare class EventSubChannelFollowEvent {
    private readonly _data;
    /** @private */
    protected readonly _client: ApiClient;
    /** @private */
    constructor(_data: EventSubChannelFollowEventData, client: ApiClient);
    /**
     * The ID of the following user.
     */
    get userId(): string;
    /**
     * The name of the following user.
     */
    get userName(): string;
    /**
     * The display name of the following user.
     */
    get userDisplayName(): string;
    /**
     * Retrieves more information about the following user.
     */
    getUser(): Promise<HelixUser>;
    /**
     * The ID of the broadcaster.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster.
     */
    get broadcasterDisplayName(): string;
    /**
     * Retrieves more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The date when the user followed.
     */
    get followDate(): Date;
}
