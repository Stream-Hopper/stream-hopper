"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubStreamOnlineEvent = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An EventSub event representing a stream going live.
 */
var EventSubStreamOnlineEvent = /** @class */ (function () {
    /** @private */
    function EventSubStreamOnlineEvent(data, client) {
        this._data = data;
        this._client = client;
    }
    Object.defineProperty(EventSubStreamOnlineEvent.prototype, "broadcasterId", {
        /**
         * The ID of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubStreamOnlineEvent.prototype, "broadcasterName", {
        /**
         * The name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubStreamOnlineEvent.prototype, "broadcasterDisplayName", {
        /**
         * The display name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the broadcaster.
     */
    EventSubStreamOnlineEvent.prototype.getBroadcaster = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubStreamOnlineEvent.prototype, "streamType", {
        /**
         * The type of the stream going live.
         */
        get: function () {
            return this._data.type;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubStreamOnlineEvent.prototype, "startDate", {
        /**
         * The date and time when the stream was started.
         */
        get: function () {
            return new Date(this._data.started_at);
        },
        enumerable: false,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubStreamOnlineEvent.prototype, "_data", void 0);
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubStreamOnlineEvent.prototype, "_client", void 0);
    EventSubStreamOnlineEvent = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubStreamOnlineEvent', 'broadcasterId')
    ], EventSubStreamOnlineEvent);
    return EventSubStreamOnlineEvent;
}());
exports.EventSubStreamOnlineEvent = EventSubStreamOnlineEvent;
