import { __awaiter, __generator } from "tslib";
import * as http from 'http';
/**
 * An abstraction of a WebHook connection adapter.
 */
var ConnectionAdapter = /** @class */ (function () {
    function ConnectionAdapter() {
    }
    /**
     * Creates the HTTP server to use for listening to events.
     *
     * @protected
     */
    ConnectionAdapter.prototype.createHttpServer = function () {
        return http.createServer();
    };
    Object.defineProperty(ConnectionAdapter.prototype, "listenUsingSsl", {
        /**
         * Whether the connection adapter listens using SSL.
         *
         * @protected
         */
        // eslint-disable-next-line @typescript-eslint/class-literal-property-style
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * The port the HTTP server should listen on.
     *
     * If not given, this should be a parameter to `EventSub#listen` instead.
     *
     * @protected
     */
    ConnectionAdapter.prototype.getListenerPort = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    /**
     * Returns the port that should be used by Twitch to connect to this server.
     *
     * If not given, this is equal to the listener port.
     *
     * @protected
     */
    ConnectionAdapter.prototype.getExternalPort = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    Object.defineProperty(ConnectionAdapter.prototype, "pathPrefix", {
        /**
         * The path prefix an external connection needs to reach this server.
         *
         * Please note that the layer redirecting to this server needs to strip the path prefix in order for this to work.
         *
         * For example, if this is set to /hooks, an external connection to /hooks/abc should pass /abc as the path to this server.
         *
         * @protected
         */
        get: function () {
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    return ConnectionAdapter;
}());
export { ConnectionAdapter };
