import { __assign, __decorate, __extends, __rest } from "tslib";
import { rtfm } from 'twitch-common';
import { ReverseProxyAdapter } from "./ReverseProxyAdapter.mjs";
/**
 * A connection adapter that reads the port to listen on from the environment.
 *
 * @hideProtected
 */
var EnvPortAdapter = /** @class */ (function (_super) {
    __extends(EnvPortAdapter, _super);
    /**
     * Creates a new environment port connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    function EnvPortAdapter(options) {
        var _this = this;
        var _a = options.variableName, variableName = _a === void 0 ? 'PORT' : _a, otherOptions = __rest(options, ["variableName"]);
        var port = Number(process.env[variableName || 'PORT']);
        if (Number.isNaN(port)) {
            throw new Error("The environment variable \"" + variableName + "\" does not contain a number");
        }
        _this = _super.call(this, __assign({ port: port }, otherOptions)) || this;
        return _this;
    }
    EnvPortAdapter = __decorate([
        rtfm('twitch-eventsub', 'EnvPortAdapter')
    ], EnvPortAdapter);
    return EnvPortAdapter;
}(ReverseProxyAdapter));
export { EnvPortAdapter };
