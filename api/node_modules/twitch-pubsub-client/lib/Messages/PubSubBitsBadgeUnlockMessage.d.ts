import type { MakeOptional } from '@d-fischer/shared-utils';
import type { ApiClient, HelixUser } from 'twitch';
import type { PubSubBasicMessageInfo } from './PubSubMessage';
/** @private */
export interface PubSubBitsBadgeUnlockMessageContent extends MakeOptional<PubSubBasicMessageInfo, 'channel_id' | 'channel_name' | 'user_id' | 'user_name'> {
    chat_message: string;
    badge_tier: number;
}
/** @private */
export interface PubSubBitsBadgeUnlockMessageData {
    data: PubSubBitsBadgeUnlockMessageContent;
    version: string;
    message_type: string;
    message_id: string;
}
/**
 * A message that informs about a user unlocking a new bits badge.
 */
export declare class PubSubBitsBadgeUnlockMessage {
    private readonly _apiClient;
    private readonly _data;
    /** @private */
    constructor(data: PubSubBitsBadgeUnlockMessageData, apiClient: ApiClient);
    /**
     * The ID of the user that unlocked the badge.
     */
    get userId(): string | undefined;
    /**
     * The name of the user that unlocked the badge.
     */
    get userName(): string | undefined;
    /**
     * Retrieves more information about the user.
     *
     * @deprecated Use {@HelixUserApi#getUserById} instead.
     */
    getUser(): Promise<HelixUser | null>;
    /**
     * The full message that was sent with the notification.
     */
    get message(): string;
    /**
     * The new badge tier.
     */
    get badgeTier(): number;
}
