"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PubSubListener = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * A listener attached to a single PubSub topic.
 */
var PubSubListener = /** @class */ (function () {
    /** @private */
    function PubSubListener(_topic, _userId, _callback, client) {
        this._topic = _topic;
        this._userId = _userId;
        this._callback = _callback;
        this._client = client;
    }
    Object.defineProperty(PubSubListener.prototype, "topic", {
        /**
         * The type of the topic.
         */
        get: function () {
            return this._topic;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubListener.prototype, "userId", {
        /**
         * The user ID part of the topic.
         */
        get: function () {
            return this._userId;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Removes the topic from the PubSub client.
     */
    PubSubListener.prototype.remove = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._client.removeListener(this)];
            });
        });
    };
    /** @private */
    PubSubListener.prototype.call = function (message) {
        this._callback(message);
    };
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], PubSubListener.prototype, "_client", void 0);
    PubSubListener = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-pubsub-client', 'PubSubListener', 'userId')
    ], PubSubListener);
    return PubSubListener;
}());
exports.PubSubListener = PubSubListener;
